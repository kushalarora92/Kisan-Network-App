"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Voice = function () {
  /**
   * @param {Credentials} credentials
   *    credentials to be used when interacting with the API.
   * @param {Object} options
   *    Addition Voice options.
   */

  function Voice(credentials) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    _classCallCheck(this, Voice);

    this.creds = credentials;
    this.options = options;

    // Used to facilitate testing of the call to the underlying object
    this._nexmo = this.options.nexmoOverride || _index2.default;

    this._nexmo.initialize(this.creds.apiKey, this.creds.apiSecret, this.options.debug);
  }

  /**
   * TODO: document
   */


  _createClass(Voice, [{
    key: "sendTTSMessage",
    value: function sendTTSMessage() {
      this._nexmo.sendTTSMessage.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "sendTTSPromptWithCapture",
    value: function sendTTSPromptWithCapture() {
      this._nexmo.sendTTSPromptWithCapture.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "sendTTSPromptWithConfirm",
    value: function sendTTSPromptWithConfirm() {
      this._nexmo.sendTTSPromptWithConfirm.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "call",
    value: function call() {
      this._nexmo.call.apply(this._nexmo, arguments);
    }
  }]);

  return Voice;
}();

exports.default = Voice;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Wb2ljZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7QUFFQTs7Ozs7Ozs7SUFFTSxLOzs7Ozs7OztBQU9KLGlCQUFZLFdBQVosRUFBdUM7QUFBQSxRQUFkLE9BQWMseURBQUosRUFBSTs7QUFBQTs7QUFDckMsU0FBSyxLQUFMLEdBQWEsV0FBYjtBQUNBLFNBQUssT0FBTCxHQUFlLE9BQWY7OztBQUdBLFNBQUssTUFBTCxHQUFjLEtBQUssT0FBTCxDQUFhLGFBQWIsbUJBQWQ7O0FBRUEsU0FBSyxNQUFMLENBQVksVUFBWixDQUF1QixLQUFLLEtBQUwsQ0FBVyxNQUFsQyxFQUEwQyxLQUFLLEtBQUwsQ0FBVyxTQUFyRCxFQUFnRSxLQUFLLE9BQUwsQ0FBYSxLQUE3RTtBQUNEOzs7Ozs7Ozs7cUNBS2dCO0FBQ2YsV0FBSyxNQUFMLENBQVksY0FBWixDQUEyQixLQUEzQixDQUFpQyxLQUFLLE1BQXRDLEVBQThDLFNBQTlDO0FBQ0Q7Ozs7Ozs7OytDQUswQjtBQUN6QixXQUFLLE1BQUwsQ0FBWSx3QkFBWixDQUFxQyxLQUFyQyxDQUEyQyxLQUFLLE1BQWhELEVBQXdELFNBQXhEO0FBQ0Q7Ozs7Ozs7OytDQUswQjtBQUN6QixXQUFLLE1BQUwsQ0FBWSx3QkFBWixDQUFxQyxLQUFyQyxDQUEyQyxLQUFLLE1BQWhELEVBQXdELFNBQXhEO0FBQ0Q7Ozs7Ozs7OzJCQUtNO0FBQ0wsV0FBSyxNQUFMLENBQVksSUFBWixDQUFpQixLQUFqQixDQUF1QixLQUFLLE1BQTVCLEVBQW9DLFNBQXBDO0FBQ0Q7Ozs7OztrQkFJWSxLIiwiZmlsZSI6IlZvaWNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBuZXhtbyBmcm9tICcuL2luZGV4JztcblxuY2xhc3MgVm9pY2Uge1xuICAvKipcbiAgICogQHBhcmFtIHtDcmVkZW50aWFsc30gY3JlZGVudGlhbHNcbiAgICogICAgY3JlZGVudGlhbHMgdG8gYmUgdXNlZCB3aGVuIGludGVyYWN0aW5nIHdpdGggdGhlIEFQSS5cbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAgICogICAgQWRkaXRpb24gVm9pY2Ugb3B0aW9ucy5cbiAgICovXG4gIGNvbnN0cnVjdG9yKGNyZWRlbnRpYWxzLCBvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLmNyZWRzID0gY3JlZGVudGlhbHM7XG4gICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICBcbiAgICAvLyBVc2VkIHRvIGZhY2lsaXRhdGUgdGVzdGluZyBvZiB0aGUgY2FsbCB0byB0aGUgdW5kZXJseWluZyBvYmplY3RcbiAgICB0aGlzLl9uZXhtbyA9IHRoaXMub3B0aW9ucy5uZXhtb092ZXJyaWRlIHx8IG5leG1vO1xuICAgIFxuICAgIHRoaXMuX25leG1vLmluaXRpYWxpemUodGhpcy5jcmVkcy5hcGlLZXksIHRoaXMuY3JlZHMuYXBpU2VjcmV0LCB0aGlzLm9wdGlvbnMuZGVidWcpO1xuICB9XG4gIFxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIHNlbmRUVFNNZXNzYWdlKCkge1xuICAgIHRoaXMuX25leG1vLnNlbmRUVFNNZXNzYWdlLmFwcGx5KHRoaXMuX25leG1vLCBhcmd1bWVudHMpO1xuICB9XG4gIFxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIHNlbmRUVFNQcm9tcHRXaXRoQ2FwdHVyZSgpIHtcbiAgICB0aGlzLl9uZXhtby5zZW5kVFRTUHJvbXB0V2l0aENhcHR1cmUuYXBwbHkodGhpcy5fbmV4bW8sIGFyZ3VtZW50cyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBUT0RPOiBkb2N1bWVudFxuICAgKi9cbiAgc2VuZFRUU1Byb21wdFdpdGhDb25maXJtKCkge1xuICAgIHRoaXMuX25leG1vLnNlbmRUVFNQcm9tcHRXaXRoQ29uZmlybS5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFRPRE86IGRvY3VtZW50XG4gICAqL1xuICBjYWxsKCkge1xuICAgIHRoaXMuX25leG1vLmNhbGwuYXBwbHkodGhpcy5fbmV4bW8sIGFyZ3VtZW50cyk7XG4gIH1cbiAgICBcbn1cblxuZXhwb3J0IGRlZmF1bHQgVm9pY2U7XG4iXX0=