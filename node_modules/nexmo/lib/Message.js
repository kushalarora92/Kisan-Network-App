"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _index = require("./index");

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Message = function () {
  /**
   * @param {Credentials} credentials
   *    credentials to be used when interacting with the API.
   * @param {Object} options
   *    Addition SMS options.
   */

  function Message(credentials) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];

    _classCallCheck(this, Message);

    this.creds = credentials;
    this.options = options;

    // Used to facilitate testing of the call to the underlying object
    this._nexmo = this.options.nexmoOverride || _index2.default;

    this._nexmo.initialize(this.creds.apiKey, this.creds.apiSecret, this.options.debug);
  }

  /**
   * TODO: document
   */


  _createClass(Message, [{
    key: "sendSms",
    value: function sendSms() {
      this._nexmo.sendTextMessage.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "sendBinaryMessage",
    value: function sendBinaryMessage() {
      this._nexmo.sendBinaryMessage.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "sendWapPushMessage",
    value: function sendWapPushMessage() {
      this._nexmo.sendWapPushMessage.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "shortcodeAlert",
    value: function shortcodeAlert() {
      this._nexmo.shortcodeAlert.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "shortcode2FA",
    value: function shortcode2FA() {
      this._nexmo.shortcode2FA.apply(this._nexmo, arguments);
    }

    /**
     * TODO: document
     */

  }, {
    key: "shortcodeMarketing",
    value: function shortcodeMarketing() {
      this._nexmo.shortcodeMarketing.apply(this._nexmo, arguments);
    }
  }]);

  return Message;
}();

exports.default = Message;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9NZXNzYWdlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQUVBOzs7Ozs7OztJQUVNLE87Ozs7Ozs7O0FBT0osbUJBQVksV0FBWixFQUF1QztBQUFBLFFBQWQsT0FBYyx5REFBSixFQUFJOztBQUFBOztBQUNyQyxTQUFLLEtBQUwsR0FBYSxXQUFiO0FBQ0EsU0FBSyxPQUFMLEdBQWUsT0FBZjs7O0FBR0EsU0FBSyxNQUFMLEdBQWMsS0FBSyxPQUFMLENBQWEsYUFBYixtQkFBZDs7QUFFQSxTQUFLLE1BQUwsQ0FBWSxVQUFaLENBQXVCLEtBQUssS0FBTCxDQUFXLE1BQWxDLEVBQTBDLEtBQUssS0FBTCxDQUFXLFNBQXJELEVBQWdFLEtBQUssT0FBTCxDQUFhLEtBQTdFO0FBQ0Q7Ozs7Ozs7Ozs4QkFLUztBQUNSLFdBQUssTUFBTCxDQUFZLGVBQVosQ0FBNEIsS0FBNUIsQ0FBa0MsS0FBSyxNQUF2QyxFQUErQyxTQUEvQztBQUNEOzs7Ozs7Ozt3Q0FLbUI7QUFDbEIsV0FBSyxNQUFMLENBQVksaUJBQVosQ0FBOEIsS0FBOUIsQ0FBb0MsS0FBSyxNQUF6QyxFQUFpRCxTQUFqRDtBQUNEOzs7Ozs7Ozt5Q0FLb0I7QUFDbkIsV0FBSyxNQUFMLENBQVksa0JBQVosQ0FBK0IsS0FBL0IsQ0FBcUMsS0FBSyxNQUExQyxFQUFrRCxTQUFsRDtBQUNEOzs7Ozs7OztxQ0FLZ0I7QUFDZixXQUFLLE1BQUwsQ0FBWSxjQUFaLENBQTJCLEtBQTNCLENBQWlDLEtBQUssTUFBdEMsRUFBOEMsU0FBOUM7QUFDRDs7Ozs7Ozs7bUNBS2M7QUFDYixXQUFLLE1BQUwsQ0FBWSxZQUFaLENBQXlCLEtBQXpCLENBQStCLEtBQUssTUFBcEMsRUFBNEMsU0FBNUM7QUFDRDs7Ozs7Ozs7eUNBS29CO0FBQ25CLFdBQUssTUFBTCxDQUFZLGtCQUFaLENBQStCLEtBQS9CLENBQXFDLEtBQUssTUFBMUMsRUFBa0QsU0FBbEQ7QUFDRDs7Ozs7O2tCQUlZLE8iLCJmaWxlIjoiTWVzc2FnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5pbXBvcnQgbmV4bW8gZnJvbSAnLi9pbmRleCc7XG5cbmNsYXNzIE1lc3NhZ2Uge1xuICAvKipcbiAgICogQHBhcmFtIHtDcmVkZW50aWFsc30gY3JlZGVudGlhbHNcbiAgICogICAgY3JlZGVudGlhbHMgdG8gYmUgdXNlZCB3aGVuIGludGVyYWN0aW5nIHdpdGggdGhlIEFQSS5cbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAgICogICAgQWRkaXRpb24gU01TIG9wdGlvbnMuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihjcmVkZW50aWFscywgb3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5jcmVkcyA9IGNyZWRlbnRpYWxzO1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgXG4gICAgLy8gVXNlZCB0byBmYWNpbGl0YXRlIHRlc3Rpbmcgb2YgdGhlIGNhbGwgdG8gdGhlIHVuZGVybHlpbmcgb2JqZWN0XG4gICAgdGhpcy5fbmV4bW8gPSB0aGlzLm9wdGlvbnMubmV4bW9PdmVycmlkZSB8fCBuZXhtbztcbiAgICBcbiAgICB0aGlzLl9uZXhtby5pbml0aWFsaXplKHRoaXMuY3JlZHMuYXBpS2V5LCB0aGlzLmNyZWRzLmFwaVNlY3JldCwgdGhpcy5vcHRpb25zLmRlYnVnKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFRPRE86IGRvY3VtZW50XG4gICAqL1xuICBzZW5kU21zKCkge1xuICAgIHRoaXMuX25leG1vLnNlbmRUZXh0TWVzc2FnZS5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFRPRE86IGRvY3VtZW50XG4gICAqL1xuICBzZW5kQmluYXJ5TWVzc2FnZSgpIHtcbiAgICB0aGlzLl9uZXhtby5zZW5kQmluYXJ5TWVzc2FnZS5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuICBcbiAgLyoqXG4gICAqIFRPRE86IGRvY3VtZW50XG4gICAqL1xuICBzZW5kV2FwUHVzaE1lc3NhZ2UoKSB7XG4gICAgdGhpcy5fbmV4bW8uc2VuZFdhcFB1c2hNZXNzYWdlLmFwcGx5KHRoaXMuX25leG1vLCBhcmd1bWVudHMpO1xuICB9XG4gIFxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIHNob3J0Y29kZUFsZXJ0KCkge1xuICAgIHRoaXMuX25leG1vLnNob3J0Y29kZUFsZXJ0LmFwcGx5KHRoaXMuX25leG1vLCBhcmd1bWVudHMpO1xuICB9XG4gIFxuICAvKipcbiAgICogVE9ETzogZG9jdW1lbnRcbiAgICovXG4gIHNob3J0Y29kZTJGQSgpIHtcbiAgICB0aGlzLl9uZXhtby5zaG9ydGNvZGUyRkEuYXBwbHkodGhpcy5fbmV4bW8sIGFyZ3VtZW50cyk7XG4gIH1cbiAgXG4gIC8qKlxuICAgKiBUT0RPOiBkb2N1bWVudFxuICAgKi9cbiAgc2hvcnRjb2RlTWFya2V0aW5nKCkge1xuICAgIHRoaXMuX25leG1vLnNob3J0Y29kZU1hcmtldGluZy5hcHBseSh0aGlzLl9uZXhtbywgYXJndW1lbnRzKTtcbiAgfVxuICBcbn1cblxuZXhwb3J0IGRlZmF1bHQgTWVzc2FnZTtcbiJdfQ==